"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/* The property-seek module literally copied and pasted here for conveinence. */
var source = "\nfunction $$boundary_to_dot(value) {\n  return value.split('][').join('.').split('[').join('.');\n}\n\nfunction $$strip_braces(value) {\n  return value.split('[').join('.').split(']').join('');\n}\n\nfunction $$escape_dots(value) {\n  value = value.split('\\'');\n  return (value.length < 3) ? value.join('\\'') : value.map(function(seg) {\n    if (seg.length < 3) return seg;\n    if ((seg[0] === '.') || (seg[seg.length - 1] === '.')) return seg;\n    return seg.split('.').join('&&');\n  }).join('');\n}\n\nfunction $$unescape_dots(value) {\n  return value.split('&&').join('.');\n}\n\nfunction $$partify(value) {\n  if (!value) return;\n  return $$escape_dots($$strip_braces($$boundary_to_dot('' + value))).split('.');\n}\n\nfunction $$property(path, o) {\n\n  var parts = $$partify(path);\n  var first;\n\n  if (typeof o !== 'object')\n    throw new TypeError('get(): expects an object got ' + typeof o);\n\n  if (parts.length === 1) return o[$$unescape_dots(parts[0])];\n  if (parts.length === 0) return;\n\n  first = o[parts.shift()];\n\n  return ((typeof o === 'object') && (o !== null)) ?\n\n    parts.reduce(function(target, prop) {\n      if (target == null) return target;\n      return target[$$unescape_dots(prop)];\n    }, first) : null;\n}\n\nfunction $$adopt(child, e) {\n\n    if (Array.isArray(child))\n      return child.forEach(innerChild => $$adopt(innerChild, e));\n\n    if (child)\n      e.appendChild(\n        (typeof child === 'object') ?\n        child : document.createTextNode(child || ''));\n\n}\n\n/**\n * $$register a Widget or Node by the specified wml:id\n * @param {string} id\n * @param {Widget|Node} target\n * @param {object} ids\n */\nfunction $$register(id, target, ids) {\n\n  if (ids.hasOwnProperty(id))\n    throw new Error('Duplicate id \\'' +id+'\\' detected!');\n\n  ids[id] = target;\n\n  return target;\n\n}\n\n/**\n * $$text creates a DOMTextNode\n * @param {string} value\n */\nfunction $$text(value) {\n\n  return document.createTextNode(value || '');\n\n}\n\n/**\n * $$resolve property access expression to avoid\n * thowing errors if it does not exist.\n * @param {object} head\n * @param {string} path\n */\nfunction $$resolve(head, path) {\n\n  var ret = $$property(head, path);\n\n  return (ret == null) ? '' : ret;\n\n}\n\n/**\n * $$node is called to create a regular DOM node\n * @param {string} tag\n * @param {object} attributes\n * @param {array<string|number|Widget>} children\n * @param {View} view\n */\nfunction $$node(tag, attributes, children, view) {\n\n  var e = (tag === 'fragment') ? document.createDocumentFragment() : document.createElement(tag);\n\n  if (typeof attributes.html === 'object')\n    Object.keys(attributes.html).forEach(key => {\n\n      if (typeof attributes.html[key] === 'function') {\n        e[key] = attributes.html[key];\n      } else {\n        e.setAttribute(key, attributes.html[key]);\n      }\n    });\n\n  children.forEach(c => $$adopt(c, e));\n\n  if (attributes.wml)\n    if (attributes.wml.id)\n      $$register(attributes.wml.id, e, view.ids);\n\n  return e;\n\n}\n\n/**\n * Attributes provides an API for reading the\n * attributes supplied to an Element.\n * @param {object} attrs\n */\nclass Attributes {\n\n    constructor(attrs) {\n\n        this._attrs = attrs;\n\n    }\n\n    static isset(value) {\n\n      return [null, undefined].indexOf(value) < 0;\n\n    }\n\n    /**\n     * read a value form the internal list.\n     * @param {string} path\n     * @param {*} defaultValue - This value is returned if the value is not set.\n     */\n    read(path, defaultValue) {\n\n        var ret = $$property(this._attrs, path.split(':').join('.'));\n\n        defaultValue = Attributes.isset(defaultValue)? defaultValue : '';\n\n        if(!Attributes.isset(ret))\n            return defaultValue;\n\n        return ret;\n\n    }\n\n    /**\n     * require is like read but throws an Error if the value is not supplied.\n     * @param {string} path\n     * @returns {*}\n     */\n    require(path) {\n\n        var ret = this.read(path);\n\n        if(!Attributes.isset(ret))\n            throw new ReferenceError(`${path} is required!`);\n\n        return ret;\n\n    }\n\n    /**\n     * requireArray requires the value to be an array, if no\n     * value is read then default is provided.\n     * @param {string} path\n     * @param {*} defaultValue\n     */\n    requireArray(path, defaultValue) {\n\n        var ret = this.read(path);\n\n        if(!Attributes.isset(ret)) {\n\n            if (Attributes.isset(defaultValue))\n                return defaultValue;\n\n            throw new ReferenceError(`${path} is required!`);\n\n        } else {\n\n            if (Array.isArray(ret))\n                return ret;\n\n            throw new TypeError(`${path} must be an array got ${typeof ret}!`);\n\n        }\n\n    }\n\n\n}\n\n\n/**\n * $$widget creates a wml widget.\n * @param {function} Construtor\n * @param {object} attributes\n * @param {array<string|number|Widget>} children\n * @param {View} view\n * @return {Widget}\n */\nfunction $$widget(Constructor, attributes, children, view) {\n\n  var childs = [];\n  var w;\n\n  children.forEach(child => Array.isArray(child) ?\n    childs.push.apply(childs, child) : childs.push(child));\n\n  w = new Constructor(new Attributes(attributes), childs);\n\n  if (attributes.wml)\n    if (attributes.wml.id)\n      $$register(attributes.wml.id, w, view.ids);\n\n  this.widgets.push(w);\n  return w.render();\n\n}\n\n/**\n * $$if is called to create an if conditional construct\n * @param {*} predicate\n * @param {function} positive\n * @param {function} negative\n */\nfunction $$if(predicate, positive, negative) {\n\n  return (predicate) ? positive() : negative();\n\n}\n\n/**\n * $$for is called to create a for loop construct\n * @param {Iterable} collection\n * @param {function} cb\n */\nfunction $$for(collection, cb) {\n\n  if (Array.isArray(collection)) {\n\n    return collection.map(cb);\n\n   } else if (typeof collection === 'object') {\n\n     return Object.keys(collection).map((key, i, all) => cb(collection[key], key, all));\n\n   }\n\n    return [];\n\n}\n\n/**\n * $$switch simulates a switch statement\n * @param {string|number|boolean} value\n * @param {object} cases\n */\nfunction $$switch(value, cases) {\n\n    var result = cases[value];\n    var defaul = cases.default;\n\n    if (result) return result;\n\n    if (defaul) return defaul;\n\n}\n";

exports.default = function () {
  return source;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,