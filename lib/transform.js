'use strict';

var Compiler = require('./parser/Compiler');
var through = require('through');
var babel = require('babel-core');

var compiler = new Compiler();

function transform(file) {

  var data = '';

  function write(buf) {
    data += buf;
  }

  function end() {

    var js;

    try {
      js = compiler.compile(data);
    } catch (e) {
      console.error('An error occurred while parsing ' + file + '!');
      console.error(e.stack ? e.stack : e);
      throw e;
    }

    this.queue(babel.transform(js, {
      sourceMaps: true,
      presets: ['es2015'],
      plugins: ['add-module-exports'],
      highlightCode: false
    }).code);

    this.queue(null);
  }

  if (!/\.wml$/.test(file)) return through();
  return through(write, end);
}

module.exports = transform;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90cmFuc2Zvcm0uanMiXSwibmFtZXMiOlsiQ29tcGlsZXIiLCJyZXF1aXJlIiwidGhyb3VnaCIsImJhYmVsIiwiY29tcGlsZXIiLCJ0cmFuc2Zvcm0iLCJmaWxlIiwiZGF0YSIsIndyaXRlIiwiYnVmIiwiZW5kIiwianMiLCJjb21waWxlIiwiZSIsImNvbnNvbGUiLCJlcnJvciIsInN0YWNrIiwicXVldWUiLCJzb3VyY2VNYXBzIiwicHJlc2V0cyIsInBsdWdpbnMiLCJoaWdobGlnaHRDb2RlIiwiY29kZSIsInRlc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFdBQVdDLFFBQVEsbUJBQVIsQ0FBZjtBQUNBLElBQUlDLFVBQVVELFFBQVEsU0FBUixDQUFkO0FBQ0EsSUFBSUUsUUFBUUYsUUFBUSxZQUFSLENBQVo7O0FBRUEsSUFBSUcsV0FBVyxJQUFJSixRQUFKLEVBQWY7O0FBRUEsU0FBU0ssU0FBVCxDQUFtQkMsSUFBbkIsRUFBeUI7O0FBRXZCLE1BQUlDLE9BQU8sRUFBWDs7QUFFQSxXQUFTQyxLQUFULENBQWVDLEdBQWYsRUFBb0I7QUFDbEJGLFlBQVFFLEdBQVI7QUFDRDs7QUFFRCxXQUFTQyxHQUFULEdBQWU7O0FBRWIsUUFBSUMsRUFBSjs7QUFFQSxRQUFJO0FBQ0ZBLFdBQUtQLFNBQVNRLE9BQVQsQ0FBaUJMLElBQWpCLENBQUw7QUFDRCxLQUZELENBRUUsT0FBT00sQ0FBUCxFQUFVO0FBQ1ZDLGNBQVFDLEtBQVIsQ0FBYyxxQ0FBcUNULElBQXJDLEdBQTRDLEdBQTFEO0FBQ0FRLGNBQVFDLEtBQVIsQ0FBY0YsRUFBRUcsS0FBRixHQUFVSCxFQUFFRyxLQUFaLEdBQW9CSCxDQUFsQztBQUNBLFlBQU1BLENBQU47QUFDRDs7QUFFRCxTQUFLSSxLQUFMLENBQVdkLE1BQU1FLFNBQU4sQ0FBZ0JNLEVBQWhCLEVBQW9CO0FBQzdCTyxrQkFBWSxJQURpQjtBQUU3QkMsZUFBUyxDQUFDLFFBQUQsQ0FGb0I7QUFHN0JDLGVBQVMsQ0FBQyxvQkFBRCxDQUhvQjtBQUk3QkMscUJBQWU7QUFKYyxLQUFwQixFQUtSQyxJQUxIOztBQU9BLFNBQUtMLEtBQUwsQ0FBVyxJQUFYO0FBRUQ7O0FBRUQsTUFBSSxDQUFFLFFBQUQsQ0FBV00sSUFBWCxDQUFnQmpCLElBQWhCLENBQUwsRUFBNEIsT0FBT0osU0FBUDtBQUM1QixTQUFPQSxRQUFRTSxLQUFSLEVBQWVFLEdBQWYsQ0FBUDtBQUVEOztBQUVEYyxPQUFPQyxPQUFQLEdBQWlCcEIsU0FBakIiLCJmaWxlIjoidHJhbnNmb3JtLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIENvbXBpbGVyID0gcmVxdWlyZSgnLi9wYXJzZXIvQ29tcGlsZXInKTtcbnZhciB0aHJvdWdoID0gcmVxdWlyZSgndGhyb3VnaCcpO1xudmFyIGJhYmVsID0gcmVxdWlyZSgnYmFiZWwtY29yZScpO1xuXG52YXIgY29tcGlsZXIgPSBuZXcgQ29tcGlsZXIoKTtcblxuZnVuY3Rpb24gdHJhbnNmb3JtKGZpbGUpIHtcblxuICB2YXIgZGF0YSA9ICcnO1xuXG4gIGZ1bmN0aW9uIHdyaXRlKGJ1Zikge1xuICAgIGRhdGEgKz0gYnVmO1xuICB9XG5cbiAgZnVuY3Rpb24gZW5kKCkge1xuXG4gICAgdmFyIGpzO1xuXG4gICAgdHJ5IHtcbiAgICAgIGpzID0gY29tcGlsZXIuY29tcGlsZShkYXRhKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBwYXJzaW5nICcgKyBmaWxlICsgJyEnKTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZS5zdGFjayA/IGUuc3RhY2sgOiBlKTtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuXG4gICAgdGhpcy5xdWV1ZShiYWJlbC50cmFuc2Zvcm0oanMsIHtcbiAgICAgIHNvdXJjZU1hcHM6IHRydWUsXG4gICAgICBwcmVzZXRzOiBbJ2VzMjAxNSddLFxuICAgICAgcGx1Z2luczogWydhZGQtbW9kdWxlLWV4cG9ydHMnXSxcbiAgICAgIGhpZ2hsaWdodENvZGU6IGZhbHNlXG4gICAgfSkuY29kZSk7XG5cbiAgICB0aGlzLnF1ZXVlKG51bGwpO1xuXG4gIH1cblxuICBpZiAoISgvXFwud21sJC8pLnRlc3QoZmlsZSkpIHJldHVybiB0aHJvdWdoKCk7XG4gIHJldHVybiB0aHJvdWdoKHdyaXRlLCBlbmQpO1xuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gdHJhbnNmb3JtO1xuXG4iXX0=