'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _WMLTree = require('../WMLTree');

var _WMLTree2 = _interopRequireDefault(_WMLTree);

jest.autoMockOff();

var view;
var node;

beforeEach(function () {
    view = null;
});

describe('WMLTree', function () {

    describe('render', function () {

        it('should render a pure html view', function () {

            node = document.createElement('div');

            view = ['div', {
                'class': 'panel panel-default'
            }, [['div', {
                'class': 'panel-heading'
            }, ['Heading']], ['div', {
                'class': 'panel-body'
            }, ['Body']]]];

            new _WMLTree2['default'](view).render(node);

            expect(node.innerHTML).toBe('<div class="panel panel-default">' + '<div class="panel-heading">Heading</div>' + '<div class="panel-body">Body</div></div>');
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fX3Rlc3RzX18vV01MVHJlZV90ZXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7dUJBRW9CLFlBQVk7Ozs7QUFGaEMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDOztBQUluQixJQUFJLElBQUksQ0FBQztBQUNULElBQUksSUFBSSxDQUFDOztBQUVULFVBQVUsQ0FBQyxZQUFXO0FBQ2xCLFFBQUksR0FBRyxJQUFJLENBQUM7Q0FDZixDQUFDLENBQUM7O0FBRUgsUUFBUSxDQUFDLFNBQVMsRUFBRSxZQUFXOztBQUUzQixZQUFRLENBQUMsUUFBUSxFQUFFLFlBQVc7O0FBRTFCLFVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRSxZQUFXOztBQUU1QyxnQkFBSSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7O0FBRXJDLGdCQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUU7QUFDUCx5QkFBTyxxQkFBcUI7YUFDL0IsRUFDRCxDQUNJLENBQUMsS0FBSyxFQUFFO0FBQ0EseUJBQU8sZUFBZTthQUN6QixFQUNELENBQUMsU0FBUyxDQUFDLENBQ2QsRUFDRCxDQUFDLEtBQUssRUFBRTtBQUNBLHlCQUFPLFlBQVk7YUFDdEIsRUFDRCxDQUFDLE1BQU0sQ0FBQyxDQUNYLENBQ0osQ0FDSixDQUFDOztBQUVGLEFBQUMscUNBQVksSUFBSSxDQUFDLENBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUVqQyxrQkFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsbUNBQW1DLEdBQzNELDBDQUEwQyxHQUMxQywwQ0FBMEMsQ0FBQyxDQUFDO1NBRW5ELENBQUMsQ0FBQztLQUVOLENBQUMsQ0FBQztDQUVOLENBQUMsQ0FBQyIsImZpbGUiOiJXTUxUcmVlX3Rlc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJqZXN0LmF1dG9Nb2NrT2ZmKCk7XG5cbmltcG9ydCBXTUxUcmVlIGZyb20gJy4uL1dNTFRyZWUnO1xuXG52YXIgdmlldztcbnZhciBub2RlO1xuXG5iZWZvcmVFYWNoKGZ1bmN0aW9uKCkge1xuICAgIHZpZXcgPSBudWxsO1xufSk7XG5cbmRlc2NyaWJlKCdXTUxUcmVlJywgZnVuY3Rpb24oKSB7XG5cbiAgICBkZXNjcmliZSgncmVuZGVyJywgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgaXQoJ3Nob3VsZCByZW5kZXIgYSBwdXJlIGh0bWwgdmlldycsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICAgICAgICAgIHZpZXcgPSBbJ2RpdicsIHtcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M6ICdwYW5lbCBwYW5lbC1kZWZhdWx0J1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBbJ2RpdicsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ3BhbmVsLWhlYWRpbmcnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgWydIZWFkaW5nJ11cbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgWydkaXYnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6ICdwYW5lbC1ib2R5J1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFsnQm9keSddXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdO1xuXG4gICAgICAgICAgICAobmV3IFdNTFRyZWUodmlldykpLnJlbmRlcihub2RlKTtcblxuICAgICAgICAgICAgZXhwZWN0KG5vZGUuaW5uZXJIVE1MKS50b0JlKCc8ZGl2IGNsYXNzPVwicGFuZWwgcGFuZWwtZGVmYXVsdFwiPicrXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJwYW5lbC1oZWFkaW5nXCI+SGVhZGluZzwvZGl2PicrXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJwYW5lbC1ib2R5XCI+Qm9keTwvZGl2PjwvZGl2PicpO1xuXG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG5cbn0pO1xuIl19